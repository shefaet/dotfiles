# Change prefix key
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Use 256 color terminal
set -g default-terminal "screen-256color"

# Enable mouse
set -g mouse on

# Status bar configuration
set -g base-index 1
set -g message-style "bg=yellow,fg=black"
set -g status-interval 1
set -g status-justify left
set -g status-keys vi
set -g status-left-length 0
set -g status-position top
set -g status-right "#[fg=yellow]#(tmux-mem-cpu-load) #[fg=red]//#[fg=default] %a %m/%d %H:%M"
set -g status-right-length 130
set -g status-style "bg=brightblack,fg=yellow"
set -g window-status-style "bg=brightblack,fg=#666666"
set -g window-status-current-style "bg=brightblack,fg=yellow"
set -g window-status-format " [#I #W] "
set -g window-status-current-format " [#I #W] "
set -g automatic-rename-format ""

# Pane configuration
set -g pane-base-index 1
set -g pane-border-format " #[fg=red]#P.#{pane_current_command}#[fg=default] "
set -g pane-border-status top
set -g pane-border-style "fg=black"
set -g pane-active-border-style "fg=yellow"

# Vim-style key bindings
bind t new-window
bind q confirm-before -p "Kill pane? (y/n)" kill-pane
bind Q confirm-before -p "Kill session? (y/n)" kill-session
bind v split-window -h
bind s split-window -v

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-\ select-pane -l

# Copy and paste from system clipboard
pastecmd="tmux set-buffer \"$(xclip -o -sel clipboard)\" && tmux paste-buffer"
copycmd="xclip -selection C"
bind p run "$pastecmd"
bind ] run "$pastecmd"
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "$copycmd"
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "$copycmd"
bind -T copy-mode-vi DoubleClick1Pane send -X select-word \; send -X copy-pipe "$copycmd"
bind -T copy-mode-vi TripleClick1Pane send -X select-line \; send -X copy-pipe "$copycmd"
bind -n DoubleClick1Pane copy-mode -e \; send -X select-word \; send -X copy-pipe "$copycmd"

# Reload this config
bind r source-file ~/.tmux.conf \; display-message "Reloaded ~/.tmux.conf"
